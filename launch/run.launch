<?xml version="1.0"?>
<launch>

  <arg name="sim" default="true" />
  <arg name="robot_ip" unless="$(arg sim)"  default ="10.0.0.99"/>
  <arg name="debug" default="false" />
  <arg name="limited" default="true" />

  <!-- Calibration -->
  <!-- 1. Run roslaunch push_vs_grasp ar_tracking.launch-->
  <!-- 2. Run rosrun tf tf_echo /ar_marker_2 /camera_link-->
  <!-- 3. Input results below -->
  <arg name="x_cal" value="-1.25452380015"/>
  <arg name="y_cal" value="-0.0409562897187"/>
  <arg name="z_cal" value="0.536076342267"/>
  <arg name="r_cal" value="-2.25628140397"/>
  <arg name="p_cal" value="0.00520005069222"/>
  <arg name="yaw_cal" value="-1.58099374934"/>


  <!-- Goal Regions -->
  <!-- Run openni.launch -> ar_tracking.launch -> rostopic echo /ar_pose_marker -->
  <!-- ID 0 = Red; ID 1 = Blue; ID 2 = Calibration -->
  <arg name="redGoal_x" value ="-0.193161775668"/>
  <arg name="redGoal_y" value ="-0.0121647480609"/>
  <arg name="redGoal_z" value ="1.04787659498"/>

  <arg name="blueGoal_x" value ="0.218119555785"/>
  <arg name="blueGoal_y" value ="0.0167020967658"/>
  <arg name="blueGoal_z" value ="1.02159262881"/>


  <!-- simulation -->
  <group if="$(arg sim)">
    <include file="$(find push_vs_grasp)/launch/gazebo.launch"/>
    <include file="$(find push_vs_grasp)/launch/spawn_table.launch"/>
    <include file="$(find push_vs_grasp)/launch/spawn_kinect.launch"/>
    <include file="$(find push_vs_grasp)/launch/ur5.launch"/>
    <include file="$(find push_vs_grasp)/launch/spawn_objects.launch"/>

    <include file="$(find kinect_segmentation)/launch/segment_tabletop.launch">
      <arg name="sim" value="$(arg sim)"/>
      <arg name="point_cloud_topic" value="/camera/depth/points"/>
      <arg name="redGoal_x" value ="$(arg redGoal_x)"/>
      <arg name="redGoal_y" value ="$(arg redGoal_y)"/>
      <arg name="redGoal_z" value ="$(arg redGoal_z)"/>
      <arg name="blueGoal_x" value ="$(arg blueGoal_x)"/>
      <arg name="blueGoal_y" value ="$(arg blueGoal_y)"/>
      <arg name="blueGoal_z" value ="$(arg blueGoal_z)"/>
  </include>

  </group>

  <!-- real Robot -->
  <group unless="$(arg sim)">

    <include file="$(find ur_modern_driver)/launch/ur5_bringup.launch">
      <arg name="robot_ip" value="$(arg robot_ip)" />
    </include>

    <!--<include file="$(find openni_launch)/launch/openni.launch"/>-->
    <!--<include file="$(find kinect_segmentation)/launch/segment_tabletop.launch"/>-->
    <!--<include file="$(find push_vs_grasp)/launch/openni.launch">-->
    <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch"/>

    <include file="$(find push_vs_grasp)/launch/kinect2_frames.launch">
      <arg name="x_cal" value="$(arg x_cal)"/>
      <arg name="y_cal" value="$(arg y_cal)"/>
      <arg name="z_cal" value="$(arg z_cal)"/>
      <arg name="r_cal" value="$(arg r_cal)"/>
      <arg name="p_cal" value="$(arg p_cal)"/>
      <arg name="yaw_cal" value="$(arg yaw_cal)"/>
    </include>

    <!--kinect2_rgb_optical_frame   /kinect2/hd/points-->
    <!--camera_link   /camera/depth_registered/points-->
    <include file="$(find kinect_segmentation)/launch/segment_tabletop.launch">
      <arg name="sim" value="$(arg sim)"/>
      <arg name="point_cloud_topic" value="/kinect2/hd/points"/>
      <arg name="redGoal_x" value ="$(arg redGoal_x)"/>
      <arg name="redGoal_y" value ="$(arg redGoal_y)"/>
      <arg name="redGoal_z" value ="$(arg redGoal_z)"/>
      <arg name="blueGoal_x" value ="$(arg blueGoal_x)"/>
      <arg name="blueGoal_y" value ="$(arg blueGoal_y)"/>
      <arg name="blueGoal_z" value ="$(arg blueGoal_z)"/>
    </include>

  </group>


  <group unless="$(arg sim)">
  <!-- Launch driver script - ensure robot is turned on-->
  <node name="gripper_launcher" pkg="robotiq_2f_gripper_control" type="Robotiq2FGripperRtuNode.py" respawn="false" output="screen" args="/dev/ttyUSB1"></node>

  </group>

  <!-- actionlib servers -->
  <include file="$(find push_vs_grasp)/launch/pick_place.launch">
	<arg name="sim" value="$(arg sim)"/>
</include>


  <!-- <include file="$(find push_vs_grasp)/launch/Push_action.launch"/> -->
  <include file="$(find push_vs_grasp)/launch/box2d_planner.launch"/>

  <!-- moveit -->
  <include file="$(find ur5_moveit_config)/launch/ur5_moveit_planning_execution.launch">
      <arg name="sim" default="$(arg sim)"/>
  </include>

  <!-- rviz -->
  <include file="$(find push_vs_grasp)/launch/rviz.launch">
    <arg name="config" default="true"/>
  </include>

</launch>
