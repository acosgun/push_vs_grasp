<!-- Default frames for Kinect/PSDK5 devices
     Places depth and RGB cameras in the same plane with 2.5cm baseline.
     Calibration may improve results, but these defaults are reasonably accurate.
-->
<launch>
  <arg name="camera" default="camera" />
  <arg name="tf_prefix" default="" />

  <!-- <arg name="pi/2" value="1.57079632679" /> -->
  <arg name="pi/2" value="0" />
  <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />

  <!-- ADDED -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="base_link_to_camera_tf" args="-1.57 0.0 0.48 -1.57 0 -2.37 base_link camera_link 10" /> -->


  <!-- x y z yaw pitch roll -->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_camera_tf" args="-1.15 0.0 0.73 -1.57 0 -2.5 base_link camera_link 10" />

  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link"
    args="0 -0.02  0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_depth_frame 100" />  
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link1"
    args="0 -0.045 0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_rgb_frame 100" />  
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link2"
    args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_depth_frame $(arg tf_prefix)/$(arg camera)_depth_optical_frame  100" />  
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link3"
    args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_rgb_frame $(arg tf_prefix)/$(arg camera)_rgb_optical_frame 100" />  
</launch>

<!-- TODO Could instead store these in camera_pose_calibration format for consistency
     with user calibrations. Blocked on camera_pose_calibration having sane dependencies. -->
